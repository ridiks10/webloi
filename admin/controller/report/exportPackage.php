<?php/** * PHPExcel * * Copyright (C) 2006 - 2014 PHPExcel * * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or (at your option) any later version. * * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA * * @category   PHPExcel * @package    PHPExcel * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel) * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt	LGPL * @version    1.8.0, 2014-03-02 */class ControllerReportExportPackage extends Controller {	public function index() {/** Error reporting */error_reporting(E_ALL);ini_set('display_errors', TRUE);ini_set('display_startup_errors', TRUE);date_default_timezone_set('Europe/London');if (PHP_SAPI == 'cli')	die('This example should only be run from a Web Browser');/** Include PHPExcel */require_once dirname(__FILE__) . '/PHPExcel.php';		$this->load->language('report/customer_activity');				if (isset($this->request->get['filter_customer'])) {			$filter_customer = $this->request->get['filter_customer'];		} else {			$filter_customer = null;		}		if (isset($this->request->get['filter_date_start'])) {			$filter_date_start = $this->request->get['filter_date_start'];		} else {			$filter_date_start = '';		}		if (isset($this->request->get['filter_date_end'])) {			$filter_date_end = $this->request->get['filter_date_end'];		} else {			$filter_date_end = '';		}				if (isset($this->request->get['filter_area'])) {			$filter_area = $this->request->get['filter_area'];		} else {			$filter_area = '';		}				if (isset($this->request->get['nguoi_lap_bieu'])) {			$nguoi_lap_bieu = $this->request->get['nguoi_lap_bieu'];		} else {			$nguoi_lap_bieu = "";		}				if (isset($this->request->get['ke_toan'])) {			$ke_toan = $this->request->get['ke_toan'];		} else {			$ke_toan = "";		}				if (isset($this->request->get['giam_doc'])) {			$giam_doc = $this->request->get['giam_doc'];		} else {			$giam_doc = "";		}				$this->load->model('report/customer');		$customer_package = array();		$filter_data = array(			'filter_customer'	=> $filter_customer,			'filter_date_start'	=> $filter_date_start,			'filter_date_end'	=> $filter_date_end,			'filter_area'	=> $filter_area		);		$results = $this->model_report_customer->getCustomerPackages($filter_data);		$totalPackage = 0;		foreach ($results as $result) {			$totalPackage = $totalPackage + $result['money_invest'];			$le = is_int($result['money_invest']+0)? 0:3;			$nameParent = $this->model_report_customer->getNameParent($result['p_node']);			$cmndParent = $this->model_report_customer->getCMNDParent($result['p_node']);			if($result['date_end'] != null && $result['date_end'] != "0000-00-00 00:00:00"){				$date_end = date($this->language->get('datetime_format'), strtotime($result['date_end']));			}else{				$date_end = '';			}			$customer_package[] = array(					'name_customer'    => $result['name_customer'],					'cmnd'    => $result['cmnd'],					'name_parent'	=> $nameParent,					'cmnd_parent'	=> $cmndParent,					'money_invest'    => number_format($result['money_invest'],$le,'.',','),					'month_invest'	=> $result['month_invest'],					'package_vn'	=> $result['package_vn'],					'type_contract'	=> $result['type_contract'],					'number_contract'	=> $result['number_contract'],					'date_added' => date($this->language->get('datetime_format'), strtotime($result['date_added'])),					'date_end' => $date_end				);		}// Create new PHPExcel object$objPHPExcel = new PHPExcel();// Set document properties$objPHPExcel->getProperties()->setCreator("5fcapital")							 ->setLastModifiedBy("5fcapital")							 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setDescription($this->language->get('heading_title'))							 ->setKeywords("office 2007 openxml php")							 ->setCategory("Test result file");// Add some data$BStyle = array(  'borders' => array(    'allborders' => array(      'style' => PHPExcel_Style_Border::BORDER_THIN    )  ));$objPHPExcel->setActiveSheetIndex(0)			->setCellValue('A12', 'STT')			->setCellValue('B12', 'Số HĐ')			->setCellValue('C12', 'Họ và tên')			->setCellValue('D12', 'CMND')			->setCellValue('E12', $this->language->get('column_package'))            ->setCellValue('F12', $this->language->get('column_money_invest'))            ->setCellValue('G12', $this->language->get('column_month_invest'))             ->setCellValue('H12', $this->language->get('column_p_node'))            ->setCellValue('I12', 'CMND Người GT')            ->setCellValue('J12', 'Ghi chú');$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);			$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(25);			$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(20);			$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(15); 			$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(100);			$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(20);   			$objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth(20);  			$objPHPExcel->getActiveSheet()->getStyle('A12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('B12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('C12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('D12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('E12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('F12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('G12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('H12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('I12')->getFont()->setBold(true);			$objPHPExcel->getActiveSheet()->getStyle('J12')->getFont()->setBold(true);				$objPHPExcel->getActiveSheet()->getStyle('A12:J12')->applyFromArray($BStyle);			$objDrawing = new PHPExcel_Worksheet_Drawing();$objDrawing->setName("logo");$objDrawing->setDescription("logo");$objDrawing->setPath(DIR_IMAGE.'logo_export.png');$objDrawing->setCoordinates('B1');$objDrawing->setHeight(129); $objDrawing->setWidth(837);$objDrawing->setWorksheet($objPHPExcel->getActiveSheet());$fromDate_toDate = date('d/m/Y');if($filter_date_start != '' && $filter_date_end != ''){	$fromDate_toDate = 'TỪ NGÀY: '.date('d/m/Y',strtotime($filter_date_start)). ' - ĐẾN NGÀY: '.date('d/m/Y',strtotime($filter_date_end));}	if($filter_area == 1){	$area = 'KV MIỀN BẮC';}else if($filter_area == 2){	$area = 'KV TP.HCM';}else{	$area = 'KV BÌNH PHƯỚC';}$objPHPExcel->getActiveSheet()->getStyle('D9')->getFont()->setSize(20)->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('D9','DANH SÁCH HỢP ĐỒNG  '.$area.' '.$fromDate_toDate);		$h=12;$i = 0;foreach ($customer_package as $package) {	$h++;		$i++;			$objPHPExcel->getActiveSheet()->setCellValue('A'.$h,$i);	$objPHPExcel->getActiveSheet()->setCellValue('B'.$h,$package['number_contract']);			$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,$package['name_customer']);	$objPHPExcel->getActiveSheet()->setCellValue('D'.$h,$package['cmnd']);	$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,$package['package_vn']);	$objPHPExcel->getActiveSheet()->setCellValue('F'.$h,$package['money_invest']);	$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,$package['month_invest']);	$objPHPExcel->getActiveSheet()->setCellValue('H'.$h,$package['name_parent']);	$objPHPExcel->getActiveSheet()->setCellValue('I'.$h,$package['cmnd_parent']);	$objPHPExcel->getActiveSheet()->setCellValue('J'.$h,'');	$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':J'.$h)->applyFromArray($BStyle);}$h++;$objPHPExcel->getActiveSheet()->getStyle('E'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,'Tổng');$le = is_int($totalPackage+0)? 0:3;$objPHPExcel->getActiveSheet()->setCellValue('F'.$h,number_format($totalPackage,$le,'.',','));$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':J'.$h)->applyFromArray($BStyle);$h = $h + 2;$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,'Người lập biểu');$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,'Phòng kế toán');$objPHPExcel->getActiveSheet()->getStyle('E'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,'Tổng giám đốc');$objPHPExcel->getActiveSheet()->getStyle('G'.$h)->getFont()->setBold(true);$h = $h + 3;$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,$nguoi_lap_bieu);$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,$ke_toan);$objPHPExcel->getActiveSheet()->getStyle('E'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,$giam_doc);$objPHPExcel->getActiveSheet()->getStyle('G'.$h)->getFont()->setBold(true);// Rename worksheet$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));// Set active sheet index to the first sheet, so Excel opens this as the first sheet$objPHPExcel->setActiveSheetIndex(0);// Redirect output to a client’s web browser (Excel5)header('Content-Type: application/vnd.ms-excel');header('Content-Disposition: attachment;filename="Customer_package.xls"');header('Cache-Control: max-age=0');// If you're serving to IE 9, then the following may be neededheader('Cache-Control: max-age=1');// If you're serving to IE over SSL, then the following may be neededheader ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the pastheader ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modifiedheader ('Cache-Control: cache, must-revalidate'); // HTTP/1.1header ('Pragma: public'); // HTTP/1.0$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');$objWriter->save('php://output');exit;	}}