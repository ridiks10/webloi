<?php/** * PHPExcel * * Copyright (C) 2006 - 2014 PHPExcel * * This library is free software; you can redistribute it and/or * modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation; either * version 2.1 of the License, or (at your option) any later version. * * This library is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA * * @category   PHPExcel * @package    PHPExcel * @copyright  Copyright (c) 2006 - 2014 PHPExcel (http://www.codeplex.com/PHPExcel) * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt	LGPL * @version    1.8.0, 2014-03-02 */class ControllerReportExportProfit extends Controller {	public function index() {/** Error reporting */error_reporting(E_ALL);ini_set('display_errors', TRUE);ini_set('display_startup_errors', TRUE);date_default_timezone_set('Europe/London');if (PHP_SAPI == 'cli')	die('This example should only be run from a Web Browser');/** Include PHPExcel */require_once dirname(__FILE__) . '/PHPExcel.php';		$this->load->language('report/customer_profit');			if (isset($this->request->get['filter_customer'])) {			$filter_customer = $this->request->get['filter_customer'];		} else {			$filter_customer = null;		}		if (isset($this->request->get['filter_date_start'])) {			$filter_date_start = $this->request->get['filter_date_start'];		} else {			$filter_date_start = '';		}		if (isset($this->request->get['filter_date_end'])) {			$filter_date_end = $this->request->get['filter_date_end'];		} else {			$filter_date_end = '';		}				if (isset($this->request->get['type_export'])) {			$type_export = (int)$this->request->get['type_export'];		} else {			$type_export = 3;		}		if (isset($this->request->get['nguoi_lap_bieu'])) {			$nguoi_lap_bieu = $this->request->get['nguoi_lap_bieu'];		} else {			$nguoi_lap_bieu = "";		}				if (isset($this->request->get['ke_toan'])) {			$ke_toan = $this->request->get['ke_toan'];		} else {			$ke_toan = "";		}				if (isset($this->request->get['giam_doc'])) {			$giam_doc = $this->request->get['giam_doc'];		} else {			$giam_doc = "";		}						$this->load->model('report/customer');		$customer_profit = array();		$filter_data = array(			'filter_customer'	=> $filter_customer,			'filter_date_start'	=> $filter_date_start,			'filter_date_end'	=> $filter_date_end		);/*		$results = $this->model_report_customer->getCustomers($filter_data);		$all_total_profit = 0;		$all_total_commission = 0;		$all_total_gift = 0;		$all_total_payout = 0;				foreach ($results as $result) {						$total_profit = $this->model_report_customer->getProfitCustomerByType($result['customer_id'],'1',$filter_data);			$total_commission = $this->model_report_customer->getProfitCustomerByType($result['customer_id'],'2',$filter_data);			$total_gift = $this->model_report_customer->getProfitCustomerByType($result['customer_id'],'3',$filter_data);			$total_payout = $this->model_report_customer->getProfitCustomerByType($result['customer_id'],'4',$filter_data);						$all_total_profit = $all_total_profit + $total_profit;			$all_total_commission = $all_total_commission + $total_commission;			$all_total_gift = $all_total_gift + $total_gift;			$all_total_payout = $all_total_payout + $total_payout;			if($total_profit != 0 || $total_commission != 0 || $total_gift != 0 || $total_payout != 0){				$customer_profit[] = array(						'name_customer'    => $result['name'],						'total_profit'	=> $total_profit,						'total_commission'	=> $total_commission,						'total_gift'	=> $total_gift,						'total_payout'	=> $total_payout					);			}		}*/		$results = $this->model_report_customer->getCustomerProfit($filter_data);		$all_total_profit = 0;		$all_total_commission = 0;		$all_total_gift = 0;		$all_total_payout = 0;				foreach ($results as $result) {			$total_profit = $this->model_report_customer->getProfitCustomerByPackage($result['id_package'],'1',$filter_data);			$total_commission = $this->model_report_customer->getProfitCustomerByPackage($result['id_package'],'2',$filter_data);			$total_gift = $this->model_report_customer->getProfitCustomerByPackage($result['id_package'],'3',$filter_data);			$total_payout = $this->model_report_customer->getProfitCustomerByPackage($result['id_package'],'4',$filter_data);						$all_total_profit = $all_total_profit + $total_profit;			$all_total_commission = $all_total_commission + $total_commission;			$all_total_gift = $all_total_gift + $total_gift;			$all_total_payout = $all_total_payout + $total_payout;						$nameParent = $this->model_report_customer->getNameParent($result['p_node']);			$cmndParent = $this->model_report_customer->getCMNDParent($result['p_node']);						/*			if($result['date_end'] != null && $result['date_end'] != "0000-00-00 00:00:00"){				$date_end = date($this->language->get('datetime_format'), strtotime($result['date_end']));			}else{				$date_end = '';			}			*/			$customer_profit[] = array(					'name_customer'    => $result['name_customer'],					'name_parent'	=> $nameParent,					'cmnd_parent'	=> $cmndParent,					'cmnd'  => $result['cmnd'],					'address_bank'  => $result['address_bank'],					'account_bank'  => $result['account_bank'],					'total_profit'	=> $total_profit,					'total_commission'	=> $total_commission,					'total_gift'	=> $total_gift,					'total_payout'	=> $total_payout				);		}// Create new PHPExcel object$objPHPExcel = new PHPExcel();// Set document properties$objPHPExcel->getProperties()->setCreator("5fcapital")							 ->setLastModifiedBy("5fcapital")							 ->setTitle("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setSubject("Office 2007 XLSX".$this->language->get('heading_title'))							 ->setDescription($this->language->get('heading_title'))							 ->setKeywords("office 2007 openxml php")							 ->setCategory("Test result file");$BStyle = array(  'borders' => array(    'allborders' => array(      'style' => PHPExcel_Style_Border::BORDER_THIN    )  ));// Add some dataif($type_export == 1){	$objPHPExcel->setActiveSheetIndex(0)			->setCellValue('A12', 'STT')            ->setCellValue('B12', 'Họ và tên')            ->setCellValue('C12', 'CMND')            ->setCellValue('D12', 'Lợi nhuận')            ->setCellValue('E12', 'Người giới thiệu')            ->setCellValue('F12', 'CMND người thiệu')            ->setCellValue('G12', 'Tài khoản NH')            ->setCellValue('H12', 'Tên ngân hàng')            ->setCellValue('I12', 'Ghi chú');	$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);            	$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(25);	$objPHPExcel->getActiveSheet()->getStyle('A12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('B12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('C12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('D12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('E12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('F12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('G12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('H12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('I12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('A12:I12')->applyFromArray($BStyle);}else if($type_export == 2){		$objPHPExcel->setActiveSheetIndex(0)			->setCellValue('A12', 'STT')            ->setCellValue('B12', 'Họ và tên')            ->setCellValue('C12', 'CMND')            ->setCellValue('D12', 'Hoa hồng')            ->setCellValue('E12', 'Người giới thiệu')            ->setCellValue('F12', 'CMND người thiệu')            ->setCellValue('G12', 'Tài khoản NH')            ->setCellValue('H12', 'Tên ngân hàng')            ->setCellValue('I12', 'Ghi chú');	$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);            	$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(25);	$objPHPExcel->getActiveSheet()->getStyle('A12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('B12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('C12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('D12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('E12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('F12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('G12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('H12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('I12')->getFont()->setBold(true);		$objPHPExcel->getActiveSheet()->getStyle('A12:I12')->applyFromArray($BStyle);	}else{	$objPHPExcel->setActiveSheetIndex(0)			->setCellValue('A12', 'STT')            ->setCellValue('B12', 'Họ và tên')            ->setCellValue('C12', 'CMND')            ->setCellValue('D12', 'Lợi nhuận')            ->setCellValue('E12', 'Hoa hồng')            ->setCellValue('F12', 'Tặng')            ->setCellValue('G12', 'Thanh toán')            ->setCellValue('H12', 'Người giới thiệu')            ->setCellValue('I12', 'CMND người thiệu')            ->setCellValue('J12', 'Tài khoản NH')            ->setCellValue('K12', 'Tên ngân hàng')            ->setCellValue('L12', 'Ghi chú');	$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(10);            	$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('K')->setWidth(25);	$objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth(25);	$objPHPExcel->getActiveSheet()->getStyle('A12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('B12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('C12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('D12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('E12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('F12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('G12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('H12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('I12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('J12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('K12')->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->getStyle('L12')->getFont()->setBold(true);		$objPHPExcel->getActiveSheet()->getStyle('A12:L12')->applyFromArray($BStyle);}$objPHPExcel->getActiveSheet()->getStyle('D10')->getFont()->setSize(20)->setBold(true);$objDrawing = new PHPExcel_Worksheet_Drawing();$objDrawing->setName("logo");$objDrawing->setDescription("logo");$objDrawing->setPath(DIR_IMAGE.'logo_export.png');$objDrawing->setCoordinates('C1');$objDrawing->setHeight(129); $objDrawing->setWidth(837);$objDrawing->setWorksheet($objPHPExcel->getActiveSheet());$fromDate_toDate = date('d/m/Y');if($filter_date_start != '' && $filter_date_end != ''){	$fromDate_toDate = 'TỪ NGÀY: '.date('d/m/Y',strtotime($filter_date_start)). ' - ĐẾN NGÀY: '.date('d/m/Y',strtotime($filter_date_end));}if($type_export == 1){	$objPHPExcel->getActiveSheet()->setCellValue('D10','BẢNG TÍNH LỢI NHUẬN NGÀY '.$fromDate_toDate);}else if($type_export == 2){	$objPHPExcel->getActiveSheet()->setCellValue('D10','BẢNG TÍNH HOA HỒNG NGÀY '.$fromDate_toDate);}else{	$objPHPExcel->getActiveSheet()->setCellValue('D10','BẢNG TÍNH LỢI NHUẬN - HOA HỒNG NGÀY '.$fromDate_toDate);}$h=12;$i = 0;if($type_export == 1){	foreach ($customer_profit as $profit) {		$h++;			$i++;		$objPHPExcel->getActiveSheet()->setCellValue('A'.$h,$i);						$objPHPExcel->getActiveSheet()->setCellValue('B'.$h,$profit['name_customer']);		$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,$profit['cmnd']);		$le_pf = is_int($profit['total_profit']+0)? 0:3;		$objPHPExcel->getActiveSheet()->setCellValue('D'.$h,number_format($profit['total_profit'],$le_pf,'.',','));		$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,$profit['name_parent']);		$objPHPExcel->getActiveSheet()->setCellValue('F'.$h,$profit['cmnd_parent']);		$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,$profit['account_bank']);		$objPHPExcel->getActiveSheet()->setCellValue('H'.$h,$profit['address_bank']);		$objPHPExcel->getActiveSheet()->setCellValue('I'.$h,"");		$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':I'.$h)->applyFromArray($BStyle);	}	$h++;	$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);	$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,'Tổng');	$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);	$al_le_pf = is_int($all_total_profit+0)? 0:3;	$objPHPExcel->getActiveSheet()->setCellValue('D'.$h,number_format($all_total_profit,$al_le_pf,'.',','));	$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':I'.$h)->applyFromArray($BStyle);}else if($type_export == 2){		foreach ($customer_profit as $profit) {		$h++;			$i++;		$objPHPExcel->getActiveSheet()->setCellValue('A'.$h,$i);						$objPHPExcel->getActiveSheet()->setCellValue('B'.$h,$profit['name_customer']);		$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,$profit['cmnd']);		$le_cm = is_int($profit['total_commission']+0)? 0:3;		$objPHPExcel->getActiveSheet()->setCellValue('D'.$h,number_format($profit['total_commission'],$le_cm,'.',','));		$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,$profit['name_parent']);		$objPHPExcel->getActiveSheet()->setCellValue('F'.$h,$profit['cmnd_parent']);		$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,$profit['account_bank']);		$objPHPExcel->getActiveSheet()->setCellValue('H'.$h,$profit['address_bank']);		$objPHPExcel->getActiveSheet()->setCellValue('I'.$h,"");		$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':I'.$h)->applyFromArray($BStyle);	}	$h++;	$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,'Tổng');	$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);	$al_le_cm = is_int($all_total_commission+0)? 0:3;	$objPHPExcel->getActiveSheet()->setCellValue('D'.$h,number_format($all_total_commission,$al_le_cm,'.',','));	$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':I'.$h)->applyFromArray($BStyle);}else{		foreach ($customer_profit as $profit) {		$h++;			$i++;		$objPHPExcel->getActiveSheet()->setCellValue('A'.$h,$i);						$objPHPExcel->getActiveSheet()->setCellValue('B'.$h,$profit['name_customer']);		$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,$profit['cmnd']);		$le_pf = is_int($profit['total_profit']+0)? 0:3;		$objPHPExcel->getActiveSheet()->setCellValue('D'.$h,number_format($profit['total_profit'],$le_pf,'.',','));		$le_cm = is_int($profit['total_commission']+0)? 0:3;		$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,number_format($profit['total_commission'],$le_cm,'.',','));		$le_g = is_int($profit['total_gift']+0)? 0:3;		$objPHPExcel->getActiveSheet()->setCellValue('F'.$h,number_format($profit['total_gift'],$le_g,'.',','));		$le_po = is_int($profit['total_payout']+0)? 0:3;		$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,number_format($profit['total_payout'],$le_po,'.',','));		$objPHPExcel->getActiveSheet()->setCellValue('H'.$h,$profit['name_parent']);		$objPHPExcel->getActiveSheet()->setCellValue('I'.$h,$profit['cmnd_parent']);		$objPHPExcel->getActiveSheet()->setCellValue('J'.$h,$profit['account_bank']);		$objPHPExcel->getActiveSheet()->setCellValue('K'.$h,$profit['address_bank']);		$objPHPExcel->getActiveSheet()->setCellValue('L'.$h,"");		$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':L'.$h)->applyFromArray($BStyle);	}	$h++;	$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,'Tổng');	$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);	$al_le_pf = is_int($all_total_profit+0)? 0:3;	$objPHPExcel->getActiveSheet()->setCellValue('D'.$h,number_format($all_total_profit,$al_le_pf,'.',','));	$al_le_cm = is_int($all_total_commission+0)? 0:3;	$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,number_format($all_total_commission,$al_le_cm,'.',','));	$al_le_g = is_int($all_total_gift+0)? 0:3;	$objPHPExcel->getActiveSheet()->setCellValue('F'.$h,number_format($all_total_gift,$al_le_g,'.',','));	$al_le_po = is_int($all_total_payout+0)? 0:3;	$objPHPExcel->getActiveSheet()->setCellValue('J'.$h,number_format($all_total_payout,$al_le_po,'.',','));	$objPHPExcel->getActiveSheet()->getStyle('A'.$h.':L'.$h)->applyFromArray($BStyle);}$h = $h + 2;$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,'Người lập biểu');$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,'Phòng kế toán');$objPHPExcel->getActiveSheet()->getStyle('E'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,'Tổng giám đốc');$objPHPExcel->getActiveSheet()->getStyle('G'.$h)->getFont()->setBold(true);$h = $h + 3;$objPHPExcel->getActiveSheet()->setCellValue('C'.$h,$nguoi_lap_bieu);$objPHPExcel->getActiveSheet()->getStyle('C'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('E'.$h,$ke_toan);$objPHPExcel->getActiveSheet()->getStyle('E'.$h)->getFont()->setBold(true);$objPHPExcel->getActiveSheet()->setCellValue('G'.$h,$giam_doc);$objPHPExcel->getActiveSheet()->getStyle('G'.$h)->getFont()->setBold(true);// Rename worksheet$objPHPExcel->getActiveSheet()->setTitle($this->language->get('heading_title'));// Set active sheet index to the first sheet, so Excel opens this as the first sheet$objPHPExcel->setActiveSheetIndex(0);// Redirect output to a client’s web browser (Excel5)header('Content-Type: application/vnd.ms-excel');header('Content-Disposition: attachment;filename="Customer_profit.xls"');header('Cache-Control: max-age=0');// If you're serving to IE 9, then the following may be neededheader('Cache-Control: max-age=1');// If you're serving to IE over SSL, then the following may be neededheader ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the pastheader ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modifiedheader ('Cache-Control: cache, must-revalidate'); // HTTP/1.1header ('Pragma: public'); // HTTP/1.0$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');$objWriter->save('php://output');exit;	}}